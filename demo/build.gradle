import com.nextfaze.devfun.Android
import com.nextfaze.devfun.Config

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.nextfaze.devfun'

kotlin {
    experimental {
        coroutines 'enable'
    }
}

android {
    compileSdkVersion Android.compileSdkVersion
    buildToolsVersion Android.buildToolsVersion

    defaultConfig {
        applicationId 'com.nextfaze.devfun.demo'

        minSdkVersion Android.minSdkVersion
        targetSdkVersion Android.targetSdkVersion
        versionCode Android.versionCode
        versionName Android.versionName(project)
        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        if (project.isSnapshot) {
            javaCompileOptions {
                annotationProcessorOptions {
                    argument 'devfun.debug.verbose', 'true'
                }
            }
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            minifyEnabled true // enable to demonstrate
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    // Dev Fun
    kaptDebug project(':devfun-compiler')
    implementation project(':devfun-annotations')
    debugImplementation project(':devfun-inject-dagger2')
    debugImplementation project(':devfun-menu')
    debugImplementation project(':devfun-httpd')
    debugImplementation project(':devfun-httpd-frontend')

    // Kotlin
    implementation Config.kotlinStdLib
    implementation Config.kotlinCoroutines
    implementation Config.kotlinCoroutinesAndroid

    // Support libs
    implementation Config.supportAppCompat
    implementation Config.supportDesign
    implementation Config.supportConstraintLayout
    implementation 'com.android.support:multidex:1.0.3'

    // Logging - https://github.com/tony19/logback-android
    implementation Config.slf4jApi
    implementation 'com.github.tony19:logback-android-core:1.1.1-6'
    implementation('com.github.tony19:logback-android-classic:1.1.1-6') {
        exclude group: 'com.google.android', module: 'android'
    }

    // Dagger 2 - https://github.com/google/dagger
    kapt Config.daggerCompiler
    implementation Config.dagger
    compileOnly Config.daggerAnnotations

    // OkHttp - https://github.com/square/okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'

    // Joda Time - https://github.com/dlew/joda-time-android
    implementation 'net.danlew:android.joda:2.9.9'

    // Stetho - https://github.com/facebook/stetho
    debugImplementation Config.stetho
    debugImplementation Config.stethoJsRhino
    debugImplementation project(':devfun-stetho')

    // Glide - https://github.com/bumptech/glide
    implementation Config.glide
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.6.1@aar'
    debugImplementation project(':devfun-util-glide')

    // Leak Canary - https://github.com/square/leakcanary
    debugImplementation Config.leakCanary
    debugImplementation project(':devfun-util-leakcanary')

    // RxJava: Reactive Extensions for the JVM - https://github.com/ReactiveX/RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.1.11'

    // RxJava bindings for Android - https://github.com/ReactiveX/RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    // RxKotlin
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'

    // Auto Disposable
    implementation 'com.uber.autodispose:autodispose-kotlin:0.5.1'
    implementation 'com.uber.autodispose:autodispose-android-kotlin:0.5.1'
    implementation 'com.uber.autodispose:autodispose-android-archcomponents-kotlin:0.5.1'

    // Instrumentation tests
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

//task jarForDokka(type: Jar) {
//    from file("$buildDir/intermediates/classes/debug")
//    dependsOn 'assembleDebug'
//    archiveName 'jarForDokka.jar'
//}
